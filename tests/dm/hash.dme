#include "common.dm"

var/list/reference = list()

/proc/check_hash_base64(input)
    var/expected = reference[input]
    var/rust = rustg_hash_string("base64", input)
    // Case sensitive
    if (!cmptextEx(expected, rust))
        CRASH("[input]\n  expected: [expected]\n  rustg: [rust]")

/test/proc/various_hash_base64()
    reference["The quick brown fox jumps over the lazy dog."] = \
    "VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZy4="

    reference["Résumé"] = \
    "UsOpc3Vtw6k="

    reference["https://example.com/?foo=bar+baz&bar\[]=baz#foo"] = \
    "aHR0cHM6Ly9leGFtcGxlLmNvbS8/Zm9vPWJhcitiYXomYmFyW109YmF6I2Zvbw=="

    for (var/entry in reference)
        check_hash_base64(entry)

    // Test B64 decode stuff
    var/input_str = "dGhpcyBpcyBzb21lIHRleHQ="
    var/expected_output = "this is some text"
    var/actual = rustg_decode_base64(input_str)

    if (!cmptextEx(expected_output, actual))
        CRASH("Base64 decode failed | S: [input_str] | E: [expected_output] | A: [actual]")

/test/proc/test_seeded_chacha20_prng()
    var/my_hex = rustg_prng_chacha20_seeded(RUSTG_RNG_FORMAT_HEX, 32, "example_seed")
    var/expected_my_hex = "dc4e89bd5efea905c227288b5e30442476f94eb580f2a5e51bd6ca3b00d95712"
    if (!cmptextEx(expected_my_hex, my_hex))
        CRASH("seeded chacha20 expected: [expected_my_hex]\n  rustg: [my_hex]")

/test/proc/test_csprng_totp_accepted()
    // 16 bytes unpadded
    var/seed = rustg_prng_chacha20_seeded(RUSTG_RNG_FORMAT_BASE32, 16, "example_seed")
    var/my_totp = rustg_hash_generate_totp(RUSTG_HASH_SHA512, seed)
    if(findtextEx("ERROR: ", my_totp) || length(my_totp) != 6 || !text2num(my_totp))
        CRASH("Invalid TOTP: [my_totp]")

/proc/check_hash_base32(input, padding)
    var/expected = reference[input]
    if(!padding)
        expected = replacetextEx(expected, "=", "")
    var/rust = rustg_encode_base32(input, padding)
    // Case sensitive
    if (!cmptextEx(expected, rust))
        CRASH("[input]\n  expected: [expected]\n  rustg: [rust]")
    var/decoded = rustg_decode_base32(expected, padding)
    if (!cmptextEx(input, decoded))
        CRASH("[input]\n  expected: [input]\n  rustg: [decoded]")

/test/proc/various_hash_base32()
    reference["The quick brown fox jumps over the lazy dog."] = \
    "KRUGKIDROVUWG2ZAMJZG653OEBTG66BANJ2W24DTEBXXMZLSEB2GQZJANRQXU6JAMRXWOLQ="

    reference["Résumé"] = \
    "KLB2S43VNXB2S==="

    reference["https://example.com/?foo=bar+baz&bar\[]=baz#foo"] = \
    "NB2HI4DTHIXS6ZLYMFWXA3DFFZRW63JPH5TG63Z5MJQXEK3CMF5CMYTBOJNV2PLCMF5CGZTPN4======"

    for (var/entry in reference)
        check_hash_base32(entry, TRUE)
        check_hash_base32(entry, FALSE)
